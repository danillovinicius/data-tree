!function(){"use strict";var msSeguranca=angular.module("msSeguranca",["ngCookies"]);return msSeguranca.run(["$rootScope","msSegurancaService","$state","msAutenticacaoService",function($rootScope,msSegurancaService,$state,msAutenticacaoService){$rootScope.$on("timer-stopped",function(){msSegurancaService.isUsuarioAutenticado()&&msAutenticacaoService.sair().then(function(){$state.go("login"),$rootScope.$msAlert.error("Seu tempo de sessão expirou",!0)})}),$rootScope.$on("$stateChangeError",function(ev,to,toParams,from,fromParams,error){401===error.status&&msSegurancaService.isUsuarioAutenticado()&&msSegurancaService.getToken()&&(msSegurancaService.setUsuarioAutenticado(!1),$state.go("login"))}),$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if($rootScope.isUsuarioAutenticado=msSegurancaService.isUsuarioAutenticado(),toState.roles)msSegurancaService.isUsuarioAutenticado()?($rootScope.limite=msSegurancaService.contador(),$rootScope.$on("UsuarioAutenticado",function(event,data){$rootScope.usuarioAutenticado=data}),msAutenticacaoService.recuperarDadosUsuario().then(function(){"login"==toState.name?$state.get(appConfig.login.sucesso)&&$state.go(appConfig.login.sucesso):msSegurancaService.possuiAcesso(toState.roles).then(function(){$state.go(toState.name,toParams,{notify:!1}).then(function(){$rootScope.$broadcast("$stateChangeSuccess",toState,toParams,fromState,fromParams)})},function(reason){$rootScope.$msNotify.info(reason),$state.get(appConfig.login.sucesso)?$state.go(appConfig.login.sucesso):$rootScope.$msNotify.error("A rota de acesso não foi encontrada")})},function(){$rootScope.$msNotify.error("Não foi possível acessar a rota.")})):($rootScope.$msNotify.info("É necessário estar logado para acessar essa funcionalidade."),event.preventDefault(),appConfig.defaultRoute?$state.go(appConfig.defaultRoute):$rootScope.$msNotify.info("Não foi informada uma rota pública padrão."));else{var goTo=toState.name;if(msSegurancaService.isUsuarioAutenticado()){if("login"!=toState.name)return $rootScope.$msNotify.info("A funcionalidade requerida só pode ser acessada publicamente"),void event.preventDefault();goTo=appConfig.login.sucesso}$state.go(goTo,toParams,{notify:!1}).then(function(){$rootScope.$broadcast("$stateChangeSuccess",toState,toParams,fromState,fromParams)})}})}]),msSeguranca}(),!function(){"use strict";var msSeguranca=angular.module("msSeguranca");return msSeguranca.factory("msSegurancaService",["$cookieStore","$q","$rootScope",function($cookieStore,$q,$rootScope){var _usuarioAutenticado,setUsuario=function(usuarioAutenticado){$rootScope.usuarioAutenticado=usuarioAutenticado,_usuarioAutenticado=usuarioAutenticado,$rootScope.$broadcast("USER_AUTHENTICATED",usuarioAutenticado)},getUsuario=function(){return _usuarioAutenticado},setUsuarioAutenticado=function(value){!0===value?($cookieStore.put("isUsuarioAutenticado",value),contador()):destruirSessao()},setTempoLimite=function(value){try{var tempoLimite=new Date(getTempoInicial()+6e4*value);$cookieStore.put("tempoLimite",tempoLimite.getTime())}catch(e){$rootScope.$msNotify.error(e)}},getTempoLimite=function(){return $cookieStore.get("tempoLimite")},isUsuarioAutenticado=function(){return $cookieStore.get("isUsuarioAutenticado")},possuiAcesso=function(rolesPermitidas,usuario){var deferred=$q.defer(),usuario=usuario?usuario:getUsuario();if("undefined"!=typeof usuario){var possui=!1;return rolesPermitidas&&(angular.forEach(usuario.roles,function(val){angular.isArray(rolesPermitidas)?angular.forEach(rolesPermitidas,function(rolePermitida){return rolePermitida==val?void(possui=!0):void 0}):rolesPermitidas==val&&(possui=!0)}),-1!=rolesPermitidas.indexOf("*")&&(possui=!0)),possui?deferred.resolve(this):deferred.reject(rolesPermitidas?"Usuário sem permissão de acesso":"A funcionalidade requerida só pode ser acessada publicamente."),deferred.promise}return deferred.promise},setTempoInicial=function(value){$cookieStore.put("tempoInicial",value)},getTempoInicial=function(){return $cookieStore.get("tempoInicial")},destruirSessao=function(){$cookieStore.remove("tempoInicial"),$cookieStore.remove("tempoLimite"),$cookieStore.remove("isUsuarioAutenticado"),$cookieStore.remove("msToken")},contador=function(){if(isUsuarioAutenticado()){var date=new Date,tempoAtual=date.getTime(),totalTimeOn=getTempoLimite()?(tempoAtual-getTempoLimite())/1e3:0;return totalTimeOn>0?setUsuarioAutenticado(!1):(setTempoInicial(date.getTime()),setTempoLimite(appConfig.login.limite)),getTempoLimite()}},setToken=function(token){"undefined"!=typeof token&&($cookieStore.put("msToken",token),setUsuarioAutenticado(!0))},getToken=function(){return $cookieStore.get("msToken")};return{contador:contador,possuiAcesso:possuiAcesso,isUsuarioAutenticado:isUsuarioAutenticado,setUsuarioAutenticado:setUsuarioAutenticado,setUsuario:setUsuario,setToken:setToken,getToken:getToken,getUsuario:getUsuario}}]),msSeguranca}(),!function(){"use strict";var msSeguranca=angular.module("msSeguranca");return msSeguranca.factory("msAutenticacaoService",["$rootScope","$q","msSegurancaService","$http","Restangular","$msAlertService",function($rootScope,$q,msSegurancaService,$http,Restangular){var getUserData=function(deferred){msSegurancaService.getUsuario()?deferred.resolve(msSegurancaService.getUsuario()):Restangular.one(appConfig.login.url_usuario).get().then(function(response){msSegurancaService.setUsuario(response.resultado.usuario),$rootScope.$broadcast("USER_LOGGED_IN",response.resultado.usuario),deferred.resolve(msSegurancaService.getUsuario())},function(reason){deferred.reject(reason)})},recuperarDadosUsuario=function(){var deferred=$q.defer(),token=msSegurancaService.getToken();return msSegurancaService.isUsuarioAutenticado()?($http.defaults.headers.common.Authorization="Bearer "+token,getUserData(deferred,token)):deferred.reject("Não foi possível recuperar os dados do usuário."),deferred.promise},autenticar=function(credentials){var deferred=$q.defer(),tempStr=credentials.client_id+":"+credentials.client_secret;credentials=$.param(credentials);var basicToken=base64_encode(tempStr);return $http.defaults.headers.common.Authorization="Basic "+basicToken,Restangular.all(appConfig.login.url).customPOST(credentials,null,null,{"Content-Type":"application/x-www-form-urlencoded"}).then(function(response){var token=response.access_token;msSegurancaService.setToken(token),$rootScope.$msAlert.clear(),$http.defaults.headers.common.Authorization="Bearer "+token,getUserData(deferred,token)},function(reason){deferred.reject(reason)}),deferred.promise},sair=function(){try{var deferred=$q.defer(),params={token:msSegurancaService.getToken()};return Restangular.all(appConfig.logout.url).post(params).then(function(){msSegurancaService.setUsuarioAutenticado(!1),msSegurancaService.setUsuario(!1),delete $http.defaults.headers.common.Authorization,$rootScope.$broadcast("timer-stop"),deferred.resolve(msSegurancaService)},function(reason){deferred.reject(reason)}),deferred.promise}catch(e){$rootScope.$msAlert.error(e)}};return{autenticar:autenticar,sair:sair,recuperarDadosUsuario:recuperarDadosUsuario}}]),msSeguranca}(),!function(){"use strict";var msSeguranca=angular.module("msSeguranca");return msSeguranca.directive("msContador",["$compile",function($compile){return{restrict:"E",link:function(scope,element,attrs){try{scope.$watch(attrs.limite,function(){var template=angular.element('<timer end-time="limite">{{mminutes}}:{{sseconds}}</timer>');element.html(template),$compile(element.contents())(scope)})}catch(e){scope.$msNotify.error(e)}}}}]),msSeguranca}(),!function(){"use strict";var msSeguranca=angular.module("msSeguranca");return msSeguranca.directive("msSeguranca",["msSegurancaService","msAutenticacaoService","$parse","$animate","$rootScope",function(msSegurancaService,msAutenticacaoService,$parse,$animate){return{restrict:"EA",transclude:"element",priority:600,link:function(scope,element,attrs,ctrl,$transclude){function getBlockElements(nodes){var startNode=nodes[0],endNode=nodes[nodes.length-1];if(startNode===endNode)return jQuery(startNode);var element=startNode,elements=[element];do{if(element=element.nextSibling,!element)break;elements.push(element)}while(element!==endNode);return jQuery(elements)}function transcluder(value){value?childScope||(childScope=scope.$new(),$transclude(scope,function(clone){clone[clone.length++]=document.createComment(" end msSeguranca: "+attrs.msSeguranca+" "),block={clone:clone},$animate.enter(clone,element.parent(),element)})):(childScope&&(childScope.$destroy(),childScope=null),block&&($animate.leave(getBlockElements(block.clone)),block=null))}var rolesPermissaoArray,block,childScope;if(attrs.roles.match(/,/g)){var trimmed=attrs.roles.replace(/\s+/g,"");rolesPermissaoArray=trimmed.split(",")}else if(attrs.roles.match(/\*/g))rolesPermissaoArray=attrs.roles;else{var roles=$parse(attrs.roles)(scope);rolesPermissaoArray="undefined"==typeof roles?attrs.roles.match(/\./g)?null:attrs.roles:roles}scope.$on("USER_AUTHENTICATED",function(event,usuario){msSegurancaService.possuiAcesso(rolesPermissaoArray,usuario).then(function(){transcluder(!0)},function(){transcluder(!1)})}),scope.$watch(function(){return msSegurancaService.isUsuarioAutenticado()},function(val){1==val?msSegurancaService.possuiAcesso(rolesPermissaoArray,msSegurancaService.getUsuario()).then(function(){transcluder(!0)},function(){transcluder(!1)}):transcluder(rolesPermissaoArray?!1:!0)})}}}]),msSeguranca}(),!function(){"use strict";var msSeguranca=angular.module("msSeguranca");return msSeguranca.directive("msUsuarioInfo",["$compile",function($compile){return{restrict:"E",link:function(scope,element,attrs){try{scope.$watch(attrs.usuarioAutenticado,function(usuario){if("undefined"!=typeof usuario&&"undefined"!=typeof usuario.perfil){var template=angular.element('<a ng-click="editUsuario()"><span class="ms-icone-usuario"></span></a><div class="box-usuario"><span class="usuarioLogado">'+usuario.nome+'</span> <span class="perfilUsuario ng-scope">'+usuario.perfil.nome+"</span></div>");element.html(template),$compile(element.contents())(scope)}},!0)}catch(e){scope.$msNotify.error(e)}}}}]),msSeguranca}();